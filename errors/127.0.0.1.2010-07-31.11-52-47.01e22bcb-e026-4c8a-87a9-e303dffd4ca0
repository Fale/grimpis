(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/web2py/applications/isys/controllers/clients.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*- \n\n#########################################################################\n## This is the controller for clients managment\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n######################################################################### \n    \ndef index():\n    clients=db(db.clients.id>0).select(orderby=db.clients.name)\n    return dict(clients=clients)\n\ndef add():\n    form=crud.create(db.clients,next=url(\'index\'))\n    companies=db(db.clients.id>0).select(orderby=db.clients.name)\n    return dict(companies=companies,form=form)\n\ndef edit():\n    clients_id=request.args(0)\n    clients=db.clients[clients_id]\n    form=crud.update(db.clients,clients,next=url(\'index\'))\n    return dict(form=form)\n#\n#    form=SQLFORM(db.clients)\n#    if form.accepts(request.vars,formname=None):\n#        return DIV("Message posted")\n#    elif form.errors:\n#        print form.errors\n#        return TABLE(*[TR(k,v) for k,v in form.errors.items()])\n\nresponse._vars=response._caller(index)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/web2py/gluon/restricted.py", line 178, in restricted\n    exec ccode in environment\n  File "/home/web2py/applications/isys/controllers/clients.py", line 33, in <module>\n  File "/home/web2py/gluon/globals.py", line 96, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/web2py/applications/isys/controllers/clients.py", line 12, in index\n    clients=db(db.clients.id>0).select(orderby=db.clients.name)\n  File "/home/web2py/gluon/sql.py", line 1329, in __getattr__\n    return dict.__getitem__(self,key)\nKeyError: \'clients\'\n'
p8
s.