(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/web2py/applications/isys/models/dbs.py'
p4
sS'code'
p5
S'# coding: utf8\nfrom applications.isys.modules.states import *\n\nis_phone = IS_MATCH(\'^(\\+\\d{2}\\-)?[\\d\\-]*(\\#\\d+)?$\')\n\ntry:\n    db=DAL("sqlite://db.db")\nexcept:\n    db=DAL(\'gae\')\n    session.connect(request,response,db=db)\n\ndb.define_table(\'customers\',\n    Field(\'name\',\'text\'),\n    Field(\'piva\',\'text\'),\n    Field(\'email\',\'text\'),\n    Field(\'address_num\',\'text\'),\n    Field(\'address_road\',\'text\'),\n    Field(\'address_city\',\'text\'),\n    Field(\'address_county\',\'text\'),\n    Field(\'address_zip\',\'text\'),\n    Field(\'address_state\',\'text\'),\n    Field(\'mobile\',\'text\'),\n    Field(\'phone\',\'text\'),\n    Field(\'fax\',\'text\'))\n    \ndb.customers.name.label=T("Name")\ndb.customers.name.requires=[IS_NOT_EMPTY(),IS_NOT_IN_DB(db,\'customers.name\')]\ndb.customers.piva.label=T("P IVA")\ndb.customers.piva.requires=IS_NOT_EMPTY()\ndb.customers.email.label=T("E-Mail")\ndb.customers.address_num.label=T("Number")\ndb.customers.address_road.label=T("Street")\ndb.customers.address_city.label=T("City")\ndb.customers.address_county.label=T("County")\ndb.customers.address_zip.label=T("ZIP Code")\ndb.customers.address_state.label=T("State")\ndb.customers.address_state.requires = IS_IN_SET(STATES)\ndb.customers.mobile.label=T("Mobile")\ndb.customers.mobile.requires=is_phone\ndb.customers.phone.label=T("Phone")\ndb.customers.phone.requires=is_phone\ndb.customers.fax.label=T("Fax")\ndb.customers.fax.requires=is_phone\n\n\n\ndb.define_table(\'works\',\n    Field(\'name\',\'text\'),\n    Field(\'customer\',db.customer),\n    Field(\'description\',\'text\'),\n    Field(\'assign_date\',\'date\'),\n    Field(\'due_to_date\',\'date\'),\n    Field(\'value\',\'integer\'),\n    Field(\'cost\',\'integer\'))\n    \ndb.works.name.label=T("Name")\ndb.works.customer.label=T("customer")\ndb.works.customer.requires=IS_IN_DB(db,\'customers.id\',\'customers.name\')\ndb.works.description.label=T("description")\ndb.works.assign_date.label=T("Assigned")\ndb.works.due_to_date.label=T("Due To")\ndb.works.value.label=T("Value")\ndb.works.cost.label=T("Cost")\n\n\ndb_invoice = DAL(\'sqlite://invoice.sqlite\')\n\ndb_invoice.define_table(\'customer\',\n                       Field(\'name\',\'string\'),\n                       Field(\'vat_code\',\'string\')\n                       )\n\n\ndb_invoice.define_table(\'payment_type\',\n                       Field(\'name\',\'string\'),\n                       Field(\'days\',\'integer\'),\n                       Field(\'end_of_month\',\'boolean\')\n                       )\ndb_invoice.define_table(\'invoice\',\n                       Field(\'code\',\'string\'),\n                       Field(\'customer\',db_invoice.customer),\n                       Field(\'created_on\',\'datetime\'),\n                       Field(\'emitted_on\',\'date\'),\n                       Field(\'emitted_at\',\'time\'),\n                       Field(\'emitted\',\'boolean\'),\n                       Field(\'remarks\',\'text\'),\n                       Field(\'total_amount\',\'double\'),\n                       Field(\'tax_percentage\',\'integer\')\n                       )\ndb_invoice.invoice.customer.requires=IS_IN_DB(db_invoice,\'customer.id\',\'customer.name\')\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/web2py/gluon/restricted.py", line 178, in restricted\n    exec ccode in environment\n  File "/home/web2py/applications/isys/models/dbs.py", line 49, in <module>\n    Field(\'customer\',db.customer),\n  File "/home/web2py/gluon/sql.py", line 1329, in __getattr__\n    return dict.__getitem__(self,key)\nKeyError: \'customer\'\n'
p8
s.