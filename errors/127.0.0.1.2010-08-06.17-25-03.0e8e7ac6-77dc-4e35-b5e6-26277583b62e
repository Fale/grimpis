(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/web2py/applications/isys/models/dbs.py'
p4
sS'code'
p5
S'# coding: utf8\nfrom applications.isys.modules.states import *\n\nis_phone = IS_MATCH(\'^(\\+\\d{2}\\-)?[\\d\\-]*(\\#\\d+)?$\')\n\ntry:\n    db=DAL("sqlite://dba.db")\nexcept:\n    db=DAL(\'gae\')\n    session.connect(request,response,db=db)\n\ndb.define_table(\'customers\',\n    Field(\'name\',\'string\'),\n    Field(\'piva\',\'string\'),\n    Field(\'email\',\'string\'),\n    Field(\'address_num\',\'string\'),\n    Field(\'address_road\',\'string\'),\n    Field(\'address_city\',\'string\'),\n    Field(\'address_county\',\'string\'),\n    Field(\'address_zip\',\'string\'),\n    Field(\'address_state\',\'string\'),\n    Field(\'mobile\',\'string\'),\n    Field(\'phone\',\'string\'),\n    Field(\'fax\',\'string\'))\n    \ndb.customers.name.label=T("Name")\ndb.customers.name.requires=[IS_NOT_EMPTY(),IS_NOT_IN_DB(db,\'customers.name\')]\ndb.customers.piva.label=T("P IVA")\ndb.customers.piva.requires=IS_NOT_EMPTY()\ndb.customers.email.label=T("E-Mail")\ndb.customers.address_num.label=T("Number")\ndb.customers.address_road.label=T("Street")\ndb.customers.address_city.label=T("City")\ndb.customers.address_county.label=T("County")\ndb.customers.address_zip.label=T("ZIP Code")\ndb.customers.address_state.label=T("State")\ndb.customers.address_state.requires = IS_IN_SET(STATES)\ndb.customers.mobile.label=T("Mobile")\ndb.customers.mobile.requires=is_phone\ndb.customers.phone.label=T("Phone")\ndb.customers.phone.requires=is_phone\ndb.customers.fax.label=T("Fax")\ndb.customers.fax.requires=is_phone\n\n\n\ndb.define_table(\'works\',\n    Field(\'name\',\'string\'),\n    Field(\'customer\',db.customers),\n    Field(\'description\',\'string\'),\n    Field(\'assign_date\',\'date\'),\n    Field(\'due_to_date\',\'date\'),\n    Field(\'value\',\'integer\'),\n    Field(\'cost\',\'integer\'))\n    \ndb.works.name.label=T("Name")\ndb.works.customer.label=T("customer")\ndb.works.customer.requires=IS_IN_DB(db,\'customers.id\',\'customers.name\')\ndb.works.description.label=T("description")\ndb.works.assign_date.label=T("Assigned")\ndb.works.due_to_date.label=T("Due To")\ndb.works.value.label=T("Value")\ndb.works.cost.label=T("Cost")\n\n\n\ndb.define_table(\'users\',\n    Field(\'user\',\'string\'),\n    Field(\'name\',\'string\'),\n    Field(\'surname\',\'string\'),\n    Field(\'employed\',\'date\'),\n    Field(\'montly\',\'integer\')\n\ndb.users.user.label=T("Username")\ndb.users.name.label=T("Name")\ndb.users.surname.label=T("Surname")\ndb.users.employed.label=T("Employed date")\ndb.users.montly.label=T("Montly wage")\n\n\n\ndb.define_table(\'hours\',\n    Field(\'work\',db.works),\n    Field(\'user\',db.users),\n    Field(\'start\',\'time\'),\n    Field(\'finish\',\'time\'),\n    Field(\'note\',\'string\'))\n    \ndb.hours.work.label=T("Work")\ndb.hours.work.requires=IS_IN_DB(db,\'works.id\',\'works.name\')\ndb.hours.user.label=T("Worker")\ndb.hours.user.requires=IS_IN_DB(db,\'users.id\',\'users.name\')\ndb.hours.start.label=T("Starting time")\ndb.hours.finish.label=T("Finishing time")\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/web2py/gluon/restricted.py", line 176, in restricted\n    ccode = compile2(code,layer)\n  File "/home/web2py/gluon/restricted.py", line 163, in compile2\n    return compile(code.rstrip().replace(\'\\r\\n\',\'\\n\')+\'\\n\', layer, \'exec\')\n  File "/home/web2py/applications/isys/models/dbs.py", line 74\n    db.users.user.label=T("Username")\n     ^\nSyntaxError: invalid syntax\n'
p8
s.